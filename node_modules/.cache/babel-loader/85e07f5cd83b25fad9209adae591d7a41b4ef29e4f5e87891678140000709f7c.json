{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87421\\\\Documents\\\\coding\\\\timeTable\\\\src\\\\components\\\\ConflictResolver.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ConflictResolver.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConflictResolver({\n  conflicts,\n  timetable,\n  onResolveConflict\n}) {\n  _s();\n  const [selectedResolution, setSelectedResolution] = useState({});\n  if (conflicts.length === 0) {\n    return null;\n  }\n  const getConflictDetails = conflict => {\n    const [slot1, slot2] = conflict;\n    const session1 = timetable[slot1];\n    const session2 = timetable[slot2];\n    return {\n      slot1,\n      slot2,\n      session1,\n      session2,\n      day: slot1.split('-')[0],\n      time1: slot1.split('-')[1],\n      time2: slot2.split('-')[1]\n    };\n  };\n  const generateResolutionOptions = conflictDetails => {\n    const {\n      session1,\n      session2,\n      day\n    } = conflictDetails;\n    const timeSlots = ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00'];\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    const options = [];\n\n    // Option 1: Keep session1, remove session2\n    options.push({\n      type: 'keep_first',\n      title: `Keep ${session1.course.code} ${session1.session.type}`,\n      description: `Remove ${session2.course.code} ${session2.session.type} from ${day} ${conflictDetails.time2}`,\n      impact: 'You will need to reschedule the removed session'\n    });\n\n    // Option 2: Keep session2, remove session1\n    options.push({\n      type: 'keep_second',\n      title: `Keep ${session2.course.code} ${session2.session.type}`,\n      description: `Remove ${session1.course.code} ${session1.session.type} from ${day} ${conflictDetails.time1}`,\n      impact: 'You will need to reschedule the removed session'\n    });\n\n    // Option 3: Find alternative slots for session1\n    const alternativeSlots1 = [];\n    days.forEach(altDay => {\n      timeSlots.forEach(altTime => {\n        const altSlot = `${altDay}-${altTime}`;\n        if (!timetable[altSlot] && altSlot !== conflictDetails.slot1 && altSlot !== conflictDetails.slot2) {\n          alternativeSlots1.push({\n            day: altDay,\n            time: altTime,\n            slot: altSlot\n          });\n        }\n      });\n    });\n    if (alternativeSlots1.length > 0) {\n      options.push({\n        type: 'move_first',\n        title: `Move ${session1.course.code} ${session1.session.type}`,\n        description: 'Move to an available time slot',\n        alternatives: alternativeSlots1.slice(0, 3),\n        // Show top 3 alternatives\n        impact: 'Session will be moved to a different time'\n      });\n    }\n\n    // Option 4: Find alternative slots for session2\n    const alternativeSlots2 = [];\n    days.forEach(altDay => {\n      timeSlots.forEach(altTime => {\n        const altSlot = `${altDay}-${altTime}`;\n        if (!timetable[altSlot] && altSlot !== conflictDetails.slot1 && altSlot !== conflictDetails.slot2) {\n          alternativeSlots2.push({\n            day: altDay,\n            time: altTime,\n            slot: altSlot\n          });\n        }\n      });\n    });\n    if (alternativeSlots2.length > 0) {\n      options.push({\n        type: 'move_second',\n        title: `Move ${session2.course.code} ${session2.session.type}`,\n        description: 'Move to an available time slot',\n        alternatives: alternativeSlots2.slice(0, 3),\n        impact: 'Session will be moved to a different time'\n      });\n    }\n    return options;\n  };\n  const handleResolveConflict = (conflictIndex, resolution) => {\n    const conflict = conflicts[conflictIndex];\n    const conflictDetails = getConflictDetails(conflict);\n    switch (resolution.type) {\n      case 'keep_first':\n        onResolveConflict(conflictDetails.slot2, null); // Remove second session\n        break;\n      case 'keep_second':\n        onResolveConflict(conflictDetails.slot1, null); // Remove first session\n        break;\n      case 'move_first':\n        if (resolution.targetSlot) {\n          onResolveConflict(conflictDetails.slot1, null); // Remove from current slot\n          onResolveConflict(resolution.targetSlot, conflictDetails.session1); // Add to new slot\n        }\n        break;\n      case 'move_second':\n        if (resolution.targetSlot) {\n          onResolveConflict(conflictDetails.slot2, null); // Remove from current slot\n          onResolveConflict(resolution.targetSlot, conflictDetails.session2); // Add to new slot\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conflict-resolver\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resolver-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u26A0\\uFE0F Resolve Time Conflicts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have \", conflicts.length, \" scheduling conflict\", conflicts.length > 1 ? 's' : '', \" that need to be resolved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conflicts-list\",\n      children: conflicts.map((conflict, index) => {\n        const conflictDetails = getConflictDetails(conflict);\n        const resolutionOptions = generateResolutionOptions(conflictDetails);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conflict-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conflict-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Conflict #\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conflict-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conflict-day\",\n                children: conflictDetails.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conflict-times\",\n                children: [conflictDetails.time1, \" - \", conflictDetails.time2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conflicting-sessions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-card\",\n              style: {\n                borderColor: conflictDetails.session1.course.color\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-title\",\n                children: [conflictDetails.session1.course.code, \" - \", conflictDetails.session1.session.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-time\",\n                children: conflictDetails.time1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vs-separator\",\n              children: \"VS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-card\",\n              style: {\n                borderColor: conflictDetails.session2.course.color\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-title\",\n                children: [conflictDetails.session2.course.code, \" - \", conflictDetails.session2.session.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-time\",\n                children: conflictDetails.time2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resolution-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Resolution Options:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), resolutionOptions.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resolution-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `conflict-${index}`,\n                  value: optionIndex,\n                  onChange: e => {\n                    setSelectedResolution({\n                      ...selectedResolution,\n                      [index]: {\n                        ...option,\n                        optionIndex: parseInt(e.target.value)\n                      }\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"option-title\",\n                  children: option.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-description\",\n                children: option.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), option.alternatives && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alternatives\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Suggested times:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this), option.alternatives.map((alt, altIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"alternative-slot\",\n                  onClick: () => {\n                    setSelectedResolution({\n                      ...selectedResolution,\n                      [index]: {\n                        ...option,\n                        targetSlot: alt.slot,\n                        optionIndex\n                      }\n                    });\n                  },\n                  children: [alt.day, \" \", alt.time]\n                }, altIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-impact\",\n                children: option.impact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this)]\n            }, optionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"resolve-btn\",\n              disabled: !selectedResolution[index],\n              onClick: () => handleResolveConflict(index, selectedResolution[index]),\n              children: \"Apply Resolution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resolver-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conflict-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCA1 Tips for Avoiding Conflicts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check course schedules before adding multiple sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Consider the duration of each session type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Plan buffer time between back-to-back classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Review prerequisite chains when selecting courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(ConflictResolver, \"6V1/E1QIvGKIdBMae95zVrTjz/E=\");\n_c = ConflictResolver;\nexport default ConflictResolver;\nvar _c;\n$RefreshReg$(_c, \"ConflictResolver\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConflictResolver","conflicts","timetable","onResolveConflict","_s","selectedResolution","setSelectedResolution","length","getConflictDetails","conflict","slot1","slot2","session1","session2","day","split","time1","time2","generateResolutionOptions","conflictDetails","timeSlots","days","options","push","type","title","course","code","session","description","impact","alternativeSlots1","forEach","altDay","altTime","altSlot","time","slot","alternatives","slice","alternativeSlots2","handleResolveConflict","conflictIndex","resolution","targetSlot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","resolutionOptions","style","borderColor","color","option","optionIndex","name","value","onChange","e","parseInt","target","alt","altIndex","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/87421/Documents/coding/timeTable/src/components/ConflictResolver.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ConflictResolver.css';\r\n\r\nfunction ConflictResolver({ conflicts, timetable, onResolveConflict }) {\r\n  const [selectedResolution, setSelectedResolution] = useState({});\r\n\r\n  if (conflicts.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const getConflictDetails = (conflict) => {\r\n    const [slot1, slot2] = conflict;\r\n    const session1 = timetable[slot1];\r\n    const session2 = timetable[slot2];\r\n    \r\n    return {\r\n      slot1,\r\n      slot2,\r\n      session1,\r\n      session2,\r\n      day: slot1.split('-')[0],\r\n      time1: slot1.split('-')[1],\r\n      time2: slot2.split('-')[1]\r\n    };\r\n  };\r\n\r\n  const generateResolutionOptions = (conflictDetails) => {\r\n    const { session1, session2, day } = conflictDetails;\r\n    const timeSlots = ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00'];\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n    \r\n    const options = [];\r\n    \r\n    // Option 1: Keep session1, remove session2\r\n    options.push({\r\n      type: 'keep_first',\r\n      title: `Keep ${session1.course.code} ${session1.session.type}`,\r\n      description: `Remove ${session2.course.code} ${session2.session.type} from ${day} ${conflictDetails.time2}`,\r\n      impact: 'You will need to reschedule the removed session'\r\n    });\r\n    \r\n    // Option 2: Keep session2, remove session1\r\n    options.push({\r\n      type: 'keep_second',\r\n      title: `Keep ${session2.course.code} ${session2.session.type}`,\r\n      description: `Remove ${session1.course.code} ${session1.session.type} from ${day} ${conflictDetails.time1}`,\r\n      impact: 'You will need to reschedule the removed session'\r\n    });\r\n    \r\n    // Option 3: Find alternative slots for session1\r\n    const alternativeSlots1 = [];\r\n    days.forEach(altDay => {\r\n      timeSlots.forEach(altTime => {\r\n        const altSlot = `${altDay}-${altTime}`;\r\n        if (!timetable[altSlot] && altSlot !== conflictDetails.slot1 && altSlot !== conflictDetails.slot2) {\r\n          alternativeSlots1.push({ day: altDay, time: altTime, slot: altSlot });\r\n        }\r\n      });\r\n    });\r\n    \r\n    if (alternativeSlots1.length > 0) {\r\n      options.push({\r\n        type: 'move_first',\r\n        title: `Move ${session1.course.code} ${session1.session.type}`,\r\n        description: 'Move to an available time slot',\r\n        alternatives: alternativeSlots1.slice(0, 3), // Show top 3 alternatives\r\n        impact: 'Session will be moved to a different time'\r\n      });\r\n    }\r\n    \r\n    // Option 4: Find alternative slots for session2\r\n    const alternativeSlots2 = [];\r\n    days.forEach(altDay => {\r\n      timeSlots.forEach(altTime => {\r\n        const altSlot = `${altDay}-${altTime}`;\r\n        if (!timetable[altSlot] && altSlot !== conflictDetails.slot1 && altSlot !== conflictDetails.slot2) {\r\n          alternativeSlots2.push({ day: altDay, time: altTime, slot: altSlot });\r\n        }\r\n      });\r\n    });\r\n    \r\n    if (alternativeSlots2.length > 0) {\r\n      options.push({\r\n        type: 'move_second',\r\n        title: `Move ${session2.course.code} ${session2.session.type}`,\r\n        description: 'Move to an available time slot',\r\n        alternatives: alternativeSlots2.slice(0, 3),\r\n        impact: 'Session will be moved to a different time'\r\n      });\r\n    }\r\n    \r\n    return options;\r\n  };\r\n\r\n  const handleResolveConflict = (conflictIndex, resolution) => {\r\n    const conflict = conflicts[conflictIndex];\r\n    const conflictDetails = getConflictDetails(conflict);\r\n    \r\n    switch (resolution.type) {\r\n      case 'keep_first':\r\n        onResolveConflict(conflictDetails.slot2, null); // Remove second session\r\n        break;\r\n      case 'keep_second':\r\n        onResolveConflict(conflictDetails.slot1, null); // Remove first session\r\n        break;\r\n      case 'move_first':\r\n        if (resolution.targetSlot) {\r\n          onResolveConflict(conflictDetails.slot1, null); // Remove from current slot\r\n          onResolveConflict(resolution.targetSlot, conflictDetails.session1); // Add to new slot\r\n        }\r\n        break;\r\n      case 'move_second':\r\n        if (resolution.targetSlot) {\r\n          onResolveConflict(conflictDetails.slot2, null); // Remove from current slot\r\n          onResolveConflict(resolution.targetSlot, conflictDetails.session2); // Add to new slot\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"conflict-resolver\">\r\n      <div className=\"resolver-header\">\r\n        <h3>⚠️ Resolve Time Conflicts</h3>\r\n        <p>You have {conflicts.length} scheduling conflict{conflicts.length > 1 ? 's' : ''} that need to be resolved</p>\r\n      </div>\r\n\r\n      <div className=\"conflicts-list\">\r\n        {conflicts.map((conflict, index) => {\r\n          const conflictDetails = getConflictDetails(conflict);\r\n          const resolutionOptions = generateResolutionOptions(conflictDetails);\r\n          \r\n          return (\r\n            <div key={index} className=\"conflict-item\">\r\n              <div className=\"conflict-header\">\r\n                <h4>Conflict #{index + 1}</h4>\r\n                <div className=\"conflict-info\">\r\n                  <span className=\"conflict-day\">{conflictDetails.day}</span>\r\n                  <span className=\"conflict-times\">\r\n                    {conflictDetails.time1} - {conflictDetails.time2}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"conflicting-sessions\">\r\n                <div className=\"session-card\" style={{ borderColor: conflictDetails.session1.course.color }}>\r\n                  <div className=\"session-title\">\r\n                    {conflictDetails.session1.course.code} - {conflictDetails.session1.session.type}\r\n                  </div>\r\n                  <div className=\"session-time\">{conflictDetails.time1}</div>\r\n                </div>\r\n                \r\n                <div className=\"vs-separator\">VS</div>\r\n                \r\n                <div className=\"session-card\" style={{ borderColor: conflictDetails.session2.course.color }}>\r\n                  <div className=\"session-title\">\r\n                    {conflictDetails.session2.course.code} - {conflictDetails.session2.session.type}\r\n                  </div>\r\n                  <div className=\"session-time\">{conflictDetails.time2}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"resolution-options\">\r\n                <h5>Resolution Options:</h5>\r\n                {resolutionOptions.map((option, optionIndex) => (\r\n                  <div key={optionIndex} className=\"resolution-option\">\r\n                    <div className=\"option-header\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`conflict-${index}`}\r\n                        value={optionIndex}\r\n                        onChange={(e) => {\r\n                          setSelectedResolution({\r\n                            ...selectedResolution,\r\n                            [index]: { ...option, optionIndex: parseInt(e.target.value) }\r\n                          });\r\n                        }}\r\n                      />\r\n                      <label className=\"option-title\">{option.title}</label>\r\n                    </div>\r\n                    \r\n                    <div className=\"option-description\">{option.description}</div>\r\n                    \r\n                    {option.alternatives && (\r\n                      <div className=\"alternatives\">\r\n                        <span>Suggested times:</span>\r\n                        {option.alternatives.map((alt, altIndex) => (\r\n                          <button\r\n                            key={altIndex}\r\n                            className=\"alternative-slot\"\r\n                            onClick={() => {\r\n                              setSelectedResolution({\r\n                                ...selectedResolution,\r\n                                [index]: { ...option, targetSlot: alt.slot, optionIndex }\r\n                              });\r\n                            }}\r\n                          >\r\n                            {alt.day} {alt.time}\r\n                          </button>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <div className=\"option-impact\">{option.impact}</div>\r\n                  </div>\r\n                ))}\r\n\r\n                <button\r\n                  className=\"resolve-btn\"\r\n                  disabled={!selectedResolution[index]}\r\n                  onClick={() => handleResolveConflict(index, selectedResolution[index])}\r\n                >\r\n                  Apply Resolution\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"resolver-footer\">\r\n        <div className=\"conflict-tips\">\r\n          <h4>💡 Tips for Avoiding Conflicts</h4>\r\n          <ul>\r\n            <li>Check course schedules before adding multiple sessions</li>\r\n            <li>Consider the duration of each session type</li>\r\n            <li>Plan buffer time between back-to-back classes</li>\r\n            <li>Review prerequisite chains when selecting courses</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConflictResolver;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}