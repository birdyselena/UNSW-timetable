{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87421\\\\Documents\\\\coding\\\\timeTable\\\\src\\\\components\\\\UNSWTimetable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./UNSWTimetable.css\";\n\n/**\r\n * UNSW Draggable Timetable Component\r\n *\r\n * @param {Object} props - Component props\r\n * @param {Array} props.courses - Array of course objects with id, name, color, sessions\r\n * @param {Function} props.onTimetableChange - Callback for timetable changes\r\n * @param {Function} props.onConflictsChange - Callback for conflicts changes\r\n * @returns {JSX.Element} - Draggable timetable component\r\n * @description Creates a draggable timetable for UNSW courses with conflict detection\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UNSWTimetable({\n  courses = [],\n  onTimetableChange,\n  onConflictsChange\n}) {\n  _s();\n  const [timetable, setTimetable] = useState({});\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [conflicts, setConflicts] = useState([]);\n  const dragRef = useRef(null);\n  const timeSlots = [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\"];\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\n  // Check for time conflicts\n  const checkConflicts = newTimetable => {\n    const conflictList = [];\n    Object.entries(newTimetable).forEach(([slot1, session1]) => {\n      Object.entries(newTimetable).forEach(([slot2, session2]) => {\n        if (slot1 !== slot2 && session1 && session2) {\n          const [day1, time1] = slot1.split(\"-\");\n          const [day2, time2] = slot2.split(\"-\");\n          if (day1 === day2) {\n            var _session1$session, _session2$session;\n            const time1Index = timeSlots.indexOf(time1);\n            const time2Index = timeSlots.indexOf(time2);\n            const duration1 = ((_session1$session = session1.session) === null || _session1$session === void 0 ? void 0 : _session1$session.duration) || 1;\n            const duration2 = ((_session2$session = session2.session) === null || _session2$session === void 0 ? void 0 : _session2$session.duration) || 1;\n\n            // Check if sessions overlap\n            const session1End = time1Index + duration1;\n            const session2End = time2Index + duration2;\n            if (time1Index < session2End && session1End > time2Index) {\n              conflictList.push([slot1, slot2]);\n            }\n          }\n        }\n      });\n    });\n    setConflicts(conflictList);\n    if (onConflictsChange) {\n      onConflictsChange(conflictList);\n    }\n  };\n\n  // Update parent component when timetable changes\n  useEffect(() => {\n    if (onTimetableChange) {\n      onTimetableChange(timetable);\n    }\n  }, [timetable, onTimetableChange]);\n  const handleDragStart = (e, course, session) => {\n    const item = {\n      course,\n      session\n    };\n    setDraggedItem(item);\n    dragRef.current = item;\n    e.dataTransfer.effectAllowed = \"move\";\n    e.currentTarget.classList.add(\"dragging\");\n  };\n  const handleDragEnd = e => {\n    e.currentTarget.classList.remove(\"dragging\");\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n    e.currentTarget.classList.add(\"drag-over\");\n  };\n  const handleDragLeave = e => {\n    e.currentTarget.classList.remove(\"drag-over\");\n  };\n  const handleDrop = (e, day, time) => {\n    var _draggedItem$session;\n    e.preventDefault();\n    e.currentTarget.classList.remove(\"drag-over\");\n    if (!draggedItem) return;\n    const slotKey = `${day}-${time}`;\n    const newTimetable = {\n      ...timetable\n    };\n\n    // Remove from previous position if exists\n    Object.keys(newTimetable).forEach(key => {\n      var _newTimetable$key, _newTimetable$key$cou, _newTimetable$key2, _newTimetable$key2$se;\n      if (((_newTimetable$key = newTimetable[key]) === null || _newTimetable$key === void 0 ? void 0 : (_newTimetable$key$cou = _newTimetable$key.course) === null || _newTimetable$key$cou === void 0 ? void 0 : _newTimetable$key$cou.id) === draggedItem.course.id && ((_newTimetable$key2 = newTimetable[key]) === null || _newTimetable$key2 === void 0 ? void 0 : (_newTimetable$key2$se = _newTimetable$key2.session) === null || _newTimetable$key2$se === void 0 ? void 0 : _newTimetable$key2$se.id) === draggedItem.session.id) {\n        delete newTimetable[key];\n      }\n    });\n\n    // Check if the slot would create conflicts due to duration\n    const duration = ((_draggedItem$session = draggedItem.session) === null || _draggedItem$session === void 0 ? void 0 : _draggedItem$session.duration) || 1;\n    const timeIndex = timeSlots.indexOf(time);\n\n    // Clear any slots that would be occupied by this session's duration\n    for (let i = 0; i < duration; i++) {\n      const currentTimeSlot = timeSlots[timeIndex + i];\n      if (currentTimeSlot) {\n        const currentSlotKey = `${day}-${currentTimeSlot}`;\n        if (newTimetable[currentSlotKey] && newTimetable[currentSlotKey].course.id !== draggedItem.course.id) {\n          // Would overwrite another course, cancel the drop\n          setDraggedItem(null);\n          return;\n        }\n      }\n    }\n\n    // Add to new position\n    newTimetable[slotKey] = draggedItem;\n    setTimetable(newTimetable);\n    checkConflicts(newTimetable);\n    setDraggedItem(null);\n  };\n  const handleRemoveSession = (day, time) => {\n    const slotKey = `${day}-${time}`;\n    const newTimetable = {\n      ...timetable\n    };\n    delete newTimetable[slotKey];\n    setTimetable(newTimetable);\n    checkConflicts(newTimetable);\n  };\n  const isConflicted = (day, time) => {\n    const slotKey = `${day}-${time}`;\n    return conflicts.some(conflict => conflict.includes(slotKey));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unsw-timetable-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), courses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-courses\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No courses selected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use the search above to add courses.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: course.color\n          },\n          children: course.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"course-name\",\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), course.sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-item\",\n          draggable: true,\n          onDragStart: e => handleDragStart(e, course, session),\n          onDragEnd: handleDragEnd,\n          style: {\n            backgroundColor: course.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: session.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [session.duration, \"h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this)]\n        }, session.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this))]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timetable-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-header\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)), timeSlots.map(time => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), days.map(day => {\n          const slotKey = `${day}-${time}`;\n          const session = timetable[slotKey];\n          const hasConflict = isConflicted(day, time);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timetable-cell ${hasConflict ? \"conflict\" : \"\"}`,\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onDrop: e => handleDrop(e, day, time),\n            children: session && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-block\",\n              style: {\n                backgroundColor: session.course.color\n              },\n              onClick: () => handleRemoveSession(day, time),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-name\",\n                children: session.course.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-type\",\n                children: session.session.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this)\n          }, slotKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this);\n        })]\n      }, time, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(UNSWTimetable, \"/eG/c6ea+MSjFtPNNS2ZsH3yUB4=\");\n_c = UNSWTimetable;\nexport default UNSWTimetable;\nvar _c;\n$RefreshReg$(_c, \"UNSWTimetable\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","UNSWTimetable","courses","onTimetableChange","onConflictsChange","_s","timetable","setTimetable","draggedItem","setDraggedItem","conflicts","setConflicts","dragRef","timeSlots","days","checkConflicts","newTimetable","conflictList","Object","entries","forEach","slot1","session1","slot2","session2","day1","time1","split","day2","time2","_session1$session","_session2$session","time1Index","indexOf","time2Index","duration1","session","duration","duration2","session1End","session2End","push","handleDragStart","e","course","item","current","dataTransfer","effectAllowed","currentTarget","classList","add","handleDragEnd","remove","handleDragOver","preventDefault","dropEffect","handleDragLeave","handleDrop","day","time","_draggedItem$session","slotKey","keys","key","_newTimetable$key","_newTimetable$key$cou","_newTimetable$key2","_newTimetable$key2$se","id","timeIndex","i","currentTimeSlot","currentSlotKey","handleRemoveSession","isConflicted","some","conflict","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","style","color","code","name","sessions","draggable","onDragStart","onDragEnd","backgroundColor","type","Fragment","hasConflict","onDragOver","onDragLeave","onDrop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/87421/Documents/coding/timeTable/src/components/UNSWTimetable.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./UNSWTimetable.css\";\r\n\r\n/**\r\n * UNSW Draggable Timetable Component\r\n *\r\n * @param {Object} props - Component props\r\n * @param {Array} props.courses - Array of course objects with id, name, color, sessions\r\n * @param {Function} props.onTimetableChange - Callback for timetable changes\r\n * @param {Function} props.onConflictsChange - Callback for conflicts changes\r\n * @returns {JSX.Element} - Draggable timetable component\r\n * @description Creates a draggable timetable for UNSW courses with conflict detection\r\n */\r\nfunction UNSWTimetable({ courses = [], onTimetableChange, onConflictsChange }) {\r\n  const [timetable, setTimetable] = useState({});\r\n  const [draggedItem, setDraggedItem] = useState(null);\r\n  const [conflicts, setConflicts] = useState([]);\r\n  const dragRef = useRef(null);\r\n\r\n  const timeSlots = [\r\n    \"8:00\",\r\n    \"9:00\",\r\n    \"10:00\",\r\n    \"11:00\",\r\n    \"12:00\",\r\n    \"13:00\",\r\n    \"14:00\",\r\n    \"15:00\",\r\n    \"16:00\",\r\n    \"17:00\",\r\n    \"18:00\",\r\n  ];\r\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n\r\n  // Check for time conflicts\r\n  const checkConflicts = (newTimetable) => {\r\n    const conflictList = [];\r\n    Object.entries(newTimetable).forEach(([slot1, session1]) => {\r\n      Object.entries(newTimetable).forEach(([slot2, session2]) => {\r\n        if (slot1 !== slot2 && session1 && session2) {\r\n          const [day1, time1] = slot1.split(\"-\");\r\n          const [day2, time2] = slot2.split(\"-\");\r\n\r\n          if (day1 === day2) {\r\n            const time1Index = timeSlots.indexOf(time1);\r\n            const time2Index = timeSlots.indexOf(time2);\r\n            const duration1 = session1.session?.duration || 1;\r\n            const duration2 = session2.session?.duration || 1;\r\n\r\n            // Check if sessions overlap\r\n            const session1End = time1Index + duration1;\r\n            const session2End = time2Index + duration2;\r\n\r\n            if (time1Index < session2End && session1End > time2Index) {\r\n              conflictList.push([slot1, slot2]);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setConflicts(conflictList);\r\n    if (onConflictsChange) {\r\n      onConflictsChange(conflictList);\r\n    }\r\n  };\r\n\r\n  // Update parent component when timetable changes\r\n  useEffect(() => {\r\n    if (onTimetableChange) {\r\n      onTimetableChange(timetable);\r\n    }\r\n  }, [timetable, onTimetableChange]);\r\n\r\n  const handleDragStart = (e, course, session) => {\r\n    const item = { course, session };\r\n    setDraggedItem(item);\r\n    dragRef.current = item;\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.currentTarget.classList.add(\"dragging\");\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    e.currentTarget.classList.remove(\"dragging\");\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = \"move\";\r\n    e.currentTarget.classList.add(\"drag-over\");\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.currentTarget.classList.remove(\"drag-over\");\r\n  };\r\n\r\n  const handleDrop = (e, day, time) => {\r\n    e.preventDefault();\r\n    e.currentTarget.classList.remove(\"drag-over\");\r\n    if (!draggedItem) return;\r\n\r\n    const slotKey = `${day}-${time}`;\r\n    const newTimetable = { ...timetable };\r\n\r\n    // Remove from previous position if exists\r\n    Object.keys(newTimetable).forEach((key) => {\r\n      if (\r\n        newTimetable[key]?.course?.id === draggedItem.course.id &&\r\n        newTimetable[key]?.session?.id === draggedItem.session.id\r\n      ) {\r\n        delete newTimetable[key];\r\n      }\r\n    });\r\n\r\n    // Check if the slot would create conflicts due to duration\r\n    const duration = draggedItem.session?.duration || 1;\r\n    const timeIndex = timeSlots.indexOf(time);\r\n\r\n    // Clear any slots that would be occupied by this session's duration\r\n    for (let i = 0; i < duration; i++) {\r\n      const currentTimeSlot = timeSlots[timeIndex + i];\r\n      if (currentTimeSlot) {\r\n        const currentSlotKey = `${day}-${currentTimeSlot}`;\r\n        if (\r\n          newTimetable[currentSlotKey] &&\r\n          newTimetable[currentSlotKey].course.id !== draggedItem.course.id\r\n        ) {\r\n          // Would overwrite another course, cancel the drop\r\n          setDraggedItem(null);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Add to new position\r\n    newTimetable[slotKey] = draggedItem;\r\n\r\n    setTimetable(newTimetable);\r\n    checkConflicts(newTimetable);\r\n    setDraggedItem(null);\r\n  };\r\n\r\n  const handleRemoveSession = (day, time) => {\r\n    const slotKey = `${day}-${time}`;\r\n    const newTimetable = { ...timetable };\r\n    delete newTimetable[slotKey];\r\n    setTimetable(newTimetable);\r\n    checkConflicts(newTimetable);\r\n  };\r\n\r\n  const isConflicted = (day, time) => {\r\n    const slotKey = `${day}-${time}`;\r\n    return conflicts.some((conflict) => conflict.includes(slotKey));\r\n  };\r\n\r\n  return (\r\n    <div className=\"unsw-timetable-container\">\r\n      {/* Course List */}\r\n      <div className=\"course-list\">\r\n        <h3>Available Courses</h3>\r\n        {courses.length === 0 ? (\r\n          <div className=\"empty-courses\">\r\n            <p>No courses selected.</p>\r\n            <p>Use the search above to add courses.</p>\r\n          </div>\r\n        ) : (\r\n          courses.map((course) => (\r\n            <div key={course.id} className=\"course-item\">\r\n              <h4 style={{ color: course.color }}>{course.code}</h4>\r\n              <p className=\"course-name\">{course.name}</p>\r\n              {course.sessions.map((session) => (\r\n                <div\r\n                  key={session.id}\r\n                  className=\"session-item\"\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, course, session)}\r\n                  onDragEnd={handleDragEnd}\r\n                  style={{ backgroundColor: course.color }}\r\n                >\r\n                  <div>{session.type}</div>\r\n                  <div>{session.duration}h</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Timetable Grid */}\r\n      <div className=\"timetable-grid\">\r\n        <div className=\"time-header\"></div>\r\n        {days.map((day) => (\r\n          <div key={day} className=\"day-header\">\r\n            {day}\r\n          </div>\r\n        ))}\r\n\r\n        {timeSlots.map((time) => (\r\n          <React.Fragment key={time}>\r\n            <div className=\"time-slot\">{time}</div>\r\n            {days.map((day) => {\r\n              const slotKey = `${day}-${time}`;\r\n              const session = timetable[slotKey];\r\n              const hasConflict = isConflicted(day, time);\r\n\r\n              return (\r\n                <div\r\n                  key={slotKey}\r\n                  className={`timetable-cell ${hasConflict ? \"conflict\" : \"\"}`}\r\n                  onDragOver={handleDragOver}\r\n                  onDragLeave={handleDragLeave}\r\n                  onDrop={(e) => handleDrop(e, day, time)}\r\n                >\r\n                  {session && (\r\n                    <div\r\n                      className=\"session-block\"\r\n                      style={{ backgroundColor: session.course.color }}\r\n                      onClick={() => handleRemoveSession(day, time)}\r\n                    >\r\n                      <div className=\"session-name\">{session.course.code}</div>\r\n                      <div className=\"session-type\">{session.session.type}</div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UNSWTimetable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}